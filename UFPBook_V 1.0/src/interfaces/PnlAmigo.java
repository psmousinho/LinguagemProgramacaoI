package interfaces;

import java.awt.CardLayout;
import java.awt.Cursor;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import ufpbook.*;

public class PnlAmigo extends javax.swing.JPanel {
    
    private TelaUsuario telausuario;
    private Agente logado;
    private Usuario user;
    private int option;
    private JPanel painel;
    
    // Construtor geral
    public PnlAmigo(TelaUsuario telausuario,JPanel painel, Usuario logado, Usuario user, int option) {
        initComponents();
        
        this.telausuario = telausuario;
        this.logado = logado;
        this.user = user;
        this.option = option;
        this.painel = painel;
        
        lblNome.setText(user.getNome());
        lblNome.addMouseListener(new MouseAdapter(){
            public void mouseClicked(MouseEvent e){
                telausuario.getPnlConteudo().add("MuralAmigo",new SubTelaMural(telausuario,user));
                CardLayout layout = (CardLayout) telausuario.getPnlConteudo().getLayout();
                layout.show(telausuario.getPnlConteudo(), "MuralAmigo");
            }
            public void mouseEntered(MouseEvent e) {
                setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
            }

            public void mouseExited(MouseEvent e) {
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            }
        });
        lblBiografia.setText(user.getDescricao());
        
        switch (option) {
            case 0:
                btnEsquerda.setText("Visitar amigo");
                btnDireita.setText("Desfazer Amizade");
                break;
            case 1:
                btnEsquerda.setText("Enviar solicitação");
                btnDireita.setText("Bloquear pessoa");
                break; 
        }
    }
    
    // construtor para a tela de solicitações e para a tela de bloqueados.
    public PnlAmigo(Agente logado,JPanel painel, Usuario user, int option) {
        initComponents();
        
        this.logado = logado;
        this.user = user;
        this.option = option;
        this.painel = painel;
        
        lblNome.setText(user.getNome());
        lblBiografia.setText(user.getDescricao());
        
        switch (option) {
            case 2:
                btnEsquerda.setText("Aceitar Socilitação");
                btnDireita.setText("Rejeitar solicitação");
                break;
            case 3:
                btnEsquerda.setVisible(false);
                btnDireita.setText("Desbloquear Pessoa");
                break;
            case 4:
                btnEsquerda.setText("Remover Membro");
                btnDireita.setText("Tornar Administrador");
                break;
            case 5:
                btnEsquerda.setVisible(false);
                btnDireita.setVisible(false);
                break;
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNome = new javax.swing.JLabel();
        lblBiografia = new javax.swing.JLabel();
        btnEsquerda = new javax.swing.JButton();
        btnDireita = new javax.swing.JButton();

        lblNome.setText("Nome");

        lblBiografia.setText("Biografia");

        btnEsquerda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEsquerdaActionPerformed(evt);
            }
        });

        btnDireita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDireitaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNome)
                    .addComponent(lblBiografia)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnEsquerda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDireita)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblBiografia)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnDireita, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEsquerda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnEsquerdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEsquerdaActionPerformed
        switch (option) {
            case 0:
                telausuario.getPnlConteudo().add("MuralAmigo",new SubTelaMural(telausuario,user));
                CardLayout layout = (CardLayout) telausuario.getPnlConteudo().getLayout();
                layout.show(telausuario.getPnlConteudo(), "MuralAmigo");
                break;
            case 1:
                logado.addPessoa(user);
                user.addSolicitacao((Usuario) logado);
                btnEsquerda.setText("Solicitaçao enviada");
                btnEsquerda.setEnabled(false);
                btnDireita.setEnabled(false);
                break; 
            case 2:
                logado.addPessoa(user);
                logado.getSolicitacoes().remove(user);
                painel.remove(this);
                painel.revalidate();
                break;
            case 4:
                int i = JOptionPane.showConfirmDialog(null ,"Tem certeza que deseja remover este usuário?", "Saída",JOptionPane.YES_NO_OPTION);
                if (i == JOptionPane.YES_OPTION) {
                    logado.getPessoas().remove(user);
                    painel.remove(this);
                    painel.revalidate();
                    int j = JOptionPane.showConfirmDialog(null ,"Você deseja bloquear este usuário?", "Saída",JOptionPane.YES_NO_OPTION);
                    if(j == JOptionPane.YES_OPTION) {
                        logado.getBloqueados().add(user);
                    }
                }
                break;
        }
    }//GEN-LAST:event_btnEsquerdaActionPerformed

    private void btnDireitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDireitaActionPerformed
        switch (option) {
            case 0:
                int i = JOptionPane.showConfirmDialog(null ,"Tem certeza que deseja desfazer a amizade?", "Saída",JOptionPane.YES_NO_OPTION);
                if (i == JOptionPane.YES_OPTION) {
                    logado.removePessoa(user);
                    painel.remove(this);
                    painel.revalidate();
                }
                break;
            case 1:
                logado.addBloqueado(user);
                btnDireita.setText("Bloqueado");
                btnEsquerda.setEnabled(false);
                btnDireita.setEnabled(false);
                break;
            case 2:
                logado.getSolicitacoes().remove(user);
                if(logado instanceof Usuario) {
                    user.removePessoa((Usuario) logado);
                }
                painel.remove(this);
                painel.revalidate();           
                break;
            case 3:
                logado.getBloqueados().remove(user);
                painel.remove(this);
                painel.revalidate();
                break;
            case 4:
                logado.getPessoas().remove(this);
                logado.getMural().getAdmins().add(user);
                painel.remove(this);
                painel.revalidate();
                break;
        }
    }//GEN-LAST:event_btnDireitaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDireita;
    private javax.swing.JButton btnEsquerda;
    private javax.swing.JLabel lblBiografia;
    private javax.swing.JLabel lblNome;
    // End of variables declaration//GEN-END:variables
}
