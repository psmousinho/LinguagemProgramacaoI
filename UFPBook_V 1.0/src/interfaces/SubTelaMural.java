
package interfaces;

import java.io.File;
import java.io.FileOutputStream;
import javax.swing.JFileChooser;
import ufpbook.*;
import java.io.*;
import java.nio.channels.FileChannel;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.filechooser.FileNameExtensionFilter;

public class SubTelaMural extends javax.swing.JPanel {

    private TelaUsuario telausuario;
    private Agente dono;
    private File file;
    
    public SubTelaMural(TelaUsuario telausuario, Agente dono) {
        this.dono = dono;
        this.telausuario = telausuario;
        file = null;
        
        initComponents();
        
        btnMenu.setVisible(false);
        btnPublico.setSelected(true);
        
        if(dono instanceof Grupo) {
            btnPublico.setVisible(false);
            btnApenasAmigos.setVisible(false);
            if(dono.getMural().getAdmins().contains(telausuario.getUser())){
                btnMenu.setVisible(true);
            }       
        }
        
        // Carrega todas as postagens do usuário.
        loadPostagens();
        
        // Informações do perfil.
        lblDono.setText(dono.getNome());
        txtNomeGrupo.setText(dono.getNome());
        txtDescricao.setText(dono.getDescricao());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frameMenu = new javax.swing.JFrame();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        scrollSolicitacao = new javax.swing.JScrollPane();
        pnlSolicitacoes = new javax.swing.JPanel();
        scrollMembros = new javax.swing.JScrollPane();
        pnlMembros = new javax.swing.JPanel();
        scrollBloqueados = new javax.swing.JScrollPane();
        pnlBloqueados = new javax.swing.JPanel();
        scrollAdmins = new javax.swing.JScrollPane();
        pnlAdmins = new javax.swing.JPanel();
        pnlEditar = new javax.swing.JPanel();
        lnlNomeGrupo = new javax.swing.JLabel();
        lnlDescricao = new javax.swing.JLabel();
        txtNomeGrupo = new javax.swing.JTextField();
        toggleEditar = new javax.swing.JToggleButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtDescricao = new javax.swing.JTextArea();
        lblErro = new javax.swing.JLabel();
        btnGroupVisiblidade = new javax.swing.ButtonGroup();
        pnlPostar = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtPostar = new javax.swing.JTextArea();
        btnPostar = new javax.swing.JButton();
        btnAdicionarFoto = new javax.swing.JButton();
        lblPath = new javax.swing.JLabel();
        btnApenasAmigos = new javax.swing.JRadioButton();
        btnPublico = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        pnlMural = new javax.swing.JPanel();
        lblDono = new javax.swing.JLabel();
        btnMenu = new javax.swing.JButton();

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        pnlSolicitacoes.setLayout(new javax.swing.BoxLayout(pnlSolicitacoes, javax.swing.BoxLayout.Y_AXIS));
        scrollSolicitacao.setViewportView(pnlSolicitacoes);

        jTabbedPane1.addTab("Solicitações", scrollSolicitacao);

        pnlMembros.setLayout(new javax.swing.BoxLayout(pnlMembros, javax.swing.BoxLayout.Y_AXIS));
        scrollMembros.setViewportView(pnlMembros);

        jTabbedPane1.addTab("Membros", scrollMembros);

        pnlBloqueados.setLayout(new javax.swing.BoxLayout(pnlBloqueados, javax.swing.BoxLayout.Y_AXIS));
        scrollBloqueados.setViewportView(pnlBloqueados);

        jTabbedPane1.addTab("Bloqueados", scrollBloqueados);

        pnlAdmins.setLayout(new javax.swing.BoxLayout(pnlAdmins, javax.swing.BoxLayout.Y_AXIS));
        scrollAdmins.setViewportView(pnlAdmins);

        jTabbedPane1.addTab("Administradores", scrollAdmins);

        lnlNomeGrupo.setText("Nome do Grupo");

        lnlDescricao.setText("Descrição: ");

        txtNomeGrupo.setEditable(false);

        toggleEditar.setText("Editar");
        toggleEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleEditarActionPerformed(evt);
            }
        });

        txtDescricao.setEditable(false);
        txtDescricao.setColumns(20);
        txtDescricao.setRows(5);
        jScrollPane7.setViewportView(txtDescricao);

        lblErro.setText("Mensagem de Erro");

        javax.swing.GroupLayout pnlEditarLayout = new javax.swing.GroupLayout(pnlEditar);
        pnlEditar.setLayout(pnlEditarLayout);
        pnlEditarLayout.setHorizontalGroup(
            pnlEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lnlNomeGrupo)
                    .addComponent(lnlDescricao))
                .addGap(10, 10, 10)
                .addGroup(pnlEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlEditarLayout.createSequentialGroup()
                        .addComponent(txtNomeGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(toggleEditar))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblErro))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        pnlEditarLayout.setVerticalGroup(
            pnlEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lnlNomeGrupo)
                    .addComponent(txtNomeGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toggleEditar))
                .addGap(3, 3, 3)
                .addComponent(lblErro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lnlDescricao)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(261, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Editar", pnlEditar);

        javax.swing.GroupLayout frameMenuLayout = new javax.swing.GroupLayout(frameMenu.getContentPane());
        frameMenu.getContentPane().setLayout(frameMenuLayout);
        frameMenuLayout.setHorizontalGroup(
            frameMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        frameMenuLayout.setVerticalGroup(
            frameMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        txtPostar.setColumns(20);
        txtPostar.setRows(5);
        jScrollPane1.setViewportView(txtPostar);

        btnPostar.setText("Postar");
        btnPostar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPostarActionPerformed(evt);
            }
        });

        btnAdicionarFoto.setText("Adicionar Foto");
        btnAdicionarFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarFotoActionPerformed(evt);
            }
        });

        lblPath.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N

        btnGroupVisiblidade.add(btnApenasAmigos);
        btnApenasAmigos.setText("Apenas amigos");

        btnGroupVisiblidade.add(btnPublico);
        btnPublico.setText("Público");

        javax.swing.GroupLayout pnlPostarLayout = new javax.swing.GroupLayout(pnlPostar);
        pnlPostar.setLayout(pnlPostarLayout);
        pnlPostarLayout.setHorizontalGroup(
            pnlPostarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPostarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPostarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPostarLayout.createSequentialGroup()
                        .addComponent(btnAdicionarFoto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPath)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnPublico)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnApenasAmigos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPostar)))
                .addContainerGap())
        );
        pnlPostarLayout.setVerticalGroup(
            pnlPostarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPostarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPostarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPostarLayout.createSequentialGroup()
                        .addGroup(pnlPostarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnPostar)
                            .addComponent(btnAdicionarFoto))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPostarLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pnlPostarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPath, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnApenasAmigos, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnPublico, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pnlMural.setLayout(new javax.swing.BoxLayout(pnlMural, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane2.setViewportView(pnlMural);

        lblDono.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblDono.setText("Nome");

        btnMenu.setText("Menu");
        btnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlPostar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 703, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(239, 239, 239)
                        .addComponent(lblDono, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnMenu)
                        .addGap(9, 9, 9)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDono)
                    .addComponent(btnMenu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlPostar, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdicionarFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarFotoActionPerformed
        FileNameExtensionFilter filter = new FileNameExtensionFilter("png", "PNG", "jpg", "JPEG file", "jpeg");
        JFileChooser chooser = new JFileChooser();
        chooser.setFileFilter(filter);
        int answer = chooser.showOpenDialog(null);
        if(answer == JFileChooser.APPROVE_OPTION) {
            file = new File(chooser.getSelectedFile().getAbsolutePath());
            lblPath.setText(file.getName());
        }
    }//GEN-LAST:event_btnAdicionarFotoActionPerformed

    private void btnPostarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPostarActionPerformed
        if(dono.getPessoas().contains(telausuario.getUser()) || dono.equals(telausuario.getUser())) {    
            if(file != null) {
                FileInputStream origem; 
                FileOutputStream destino;
                FileChannel fcOrigem;
                FileChannel fcDestino;
                try {
                    origem = new FileInputStream(file.getPath());
                    destino = new FileOutputStream("imagens\\" + file.getName());
                    fcOrigem = origem.getChannel();
                    fcDestino = destino.getChannel();
                    fcOrigem.transferTo(0, fcOrigem.size(), fcDestino);
                    origem.close();
                    destino.close();
                     file = new File("imagens\\" + file.getName());
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(SubTelaMural.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }

            Postagem post = new Postagem(telausuario.getUser(),txtPostar.getText(),file,btnPublico.isSelected());
            file = null;
            lblPath.setText(null);
            dono.getMural().addPostagem(post);
            pnlMural.add(new PnlPost(this, post, telausuario.getUser()));
            pnlMural.revalidate();
            telausuario.getRede().salvarDados();
        } else {
            lblPath.setText("Você não está autorizado para postar neste mural.");
        }
    }//GEN-LAST:event_btnPostarActionPerformed

    private void btnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed
        lblErro.setVisible(false);
        frameMenu.setSize(500, 500);
        frameMenu.setLocationRelativeTo(null);
        frameMenu.setVisible(true); 
    }//GEN-LAST:event_btnMenuActionPerformed

    private void toggleEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleEditarActionPerformed
        if(toggleEditar.isSelected()) {
            txtNomeGrupo.setEditable(true);
            txtDescricao.setEditable(true);
            lblErro.setVisible(false);
        } else {
            if(!telausuario.getRede().getGrupos().containsKey(txtNomeGrupo.getText())) {
                telausuario.getRede().getGrupos().remove(dono.getNome());
                telausuario.getRede().getGrupos().put(txtNomeGrupo.getText(), (Grupo)dono);
                dono.setNome(txtNomeGrupo.getText());
                lblDono.setText(dono.getNome());
                dono.setDescricao(txtDescricao.getText());
                revalidate();
            } else {
                lblErro.setText("Já existe um grupo com esse nome. Tente outro.");
                lblErro.setVisible(true);
                txtNomeGrupo.setText(dono.getNome());
            }
            txtNomeGrupo.setEditable(false);
            txtDescricao.setEditable(false);
        }
    }//GEN-LAST:event_toggleEditarActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        if(jTabbedPane1.getSelectedComponent().equals(scrollSolicitacao)) {
            pnlSolicitacoes.removeAll();
            // Carrega as solicitações de entrada no grupo
            for(Usuario usuario : dono.getSolicitacoes()) {
                   pnlSolicitacoes.add(new PnlAmigo(dono, pnlSolicitacoes, usuario, 2));
                }
        }
        else if (jTabbedPane1.getSelectedComponent().equals(scrollMembros)){
            pnlMembros.removeAll();
            // Carrega os membros do grupo
            for(Usuario usuario : dono.getPessoas()) {
               if(!dono.getMural().getAdmins().contains(usuario)) {
                    pnlMembros.add(new PnlAmigo(dono, pnlMembros, usuario, 4));
               } 
            }
        }
        else if(jTabbedPane1.getSelectedComponent().equals(scrollAdmins)){
            pnlAdmins.removeAll();
            //Carrega os administradores
            for(Usuario usuario : dono.getMural().getAdmins()) {
                pnlAdmins.add(new PnlAmigo(dono, pnlAdmins, usuario, 5));
            }
        }
        else if(jTabbedPane1.getSelectedComponent().equals(scrollBloqueados)){
            pnlBloqueados.removeAll();
            // Carraga as pessoas bloqueadas
            for(Usuario usuario : dono.getBloqueados()) {
               pnlBloqueados.add(new PnlAmigo(dono, pnlBloqueados, usuario, 3));
            }
        }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    public void loadPostagens() {
        pnlMural.removeAll();
        
        for(Postagem post: dono.getMural().getPostagens()){
            if(post == null) {
                continue;
            }
            if(post.isVisibilidade() || post.getAutor().getPessoas().contains(telausuario.getUser()) || post.getAutor().equals(telausuario.getUser())) {
                pnlMural.add(new PnlPost(this, post, telausuario.getUser()));
            } 
        }
        
        pnlMural.revalidate();
    }
    
    public Agente getDono() {
        return dono;
    }
    
    public Mural getMural() {
        return dono.getMural();
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarFoto;
    private javax.swing.JRadioButton btnApenasAmigos;
    private javax.swing.ButtonGroup btnGroupVisiblidade;
    private javax.swing.JButton btnMenu;
    private javax.swing.JButton btnPostar;
    private javax.swing.JRadioButton btnPublico;
    private javax.swing.JFrame frameMenu;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblDono;
    private javax.swing.JLabel lblErro;
    private javax.swing.JLabel lblPath;
    private javax.swing.JLabel lnlDescricao;
    private javax.swing.JLabel lnlNomeGrupo;
    private javax.swing.JPanel pnlAdmins;
    private javax.swing.JPanel pnlBloqueados;
    private javax.swing.JPanel pnlEditar;
    private javax.swing.JPanel pnlMembros;
    private javax.swing.JPanel pnlMural;
    private javax.swing.JPanel pnlPostar;
    private javax.swing.JPanel pnlSolicitacoes;
    private javax.swing.JScrollPane scrollAdmins;
    private javax.swing.JScrollPane scrollBloqueados;
    private javax.swing.JScrollPane scrollMembros;
    private javax.swing.JScrollPane scrollSolicitacao;
    private javax.swing.JToggleButton toggleEditar;
    private javax.swing.JTextArea txtDescricao;
    private javax.swing.JTextField txtNomeGrupo;
    private javax.swing.JTextArea txtPostar;
    // End of variables declaration//GEN-END:variables
}
